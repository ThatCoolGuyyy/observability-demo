apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_PATHS_PROVISIONING
          value: "/etc/grafana/provisioning"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-config
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards
          mountPath: /var/lib/grafana/dashboards
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards-config
        configMap:
          name: grafana-dashboards-config
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - port: 3005
    targetPort: 3000
    protocol: TCP
    name: http
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
      isDefault: true
    - name: Loki
      type: loki
      access: proxy
      url: http://loki:3100
    - name: Tempo
      type: tempo
      access: proxy
      url: http://tempo:3200
      basicAuth: false
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'dashboards'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
data:
  observability.json: |
    {
      "title": "Metrics & Logs Dashboard",
      "tags": ["metrics", "logs", "prometheus", "loki"],
      "style": "dark",
      "timezone": "browser",
      "panels": [
        {
          "id": 1,
          "title": "üöÄ Requests Per Second (1m avg)",
          "type": "stat",
          "targets": [
            {
              "datasource": "Prometheus",
              "expr": "rate(app_requests_total{job=\"telemetry-demo-app-collector\"}[1m])",
              "refId": "A",
              "legendFormat": "RPS"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": { "mode": "palette-classic" },
              "unit": "reqps",
              "decimals": 2
            }
          },
          "gridPos": { "h": 4, "w": 4, "x": 0, "y": 0 }
        },
        {
          "id": 2,
          "title": "‚ö° Average Response Time",
          "type": "stat",
          "targets": [
            {
              "datasource": "Prometheus",
              "expr": "rate(app_response_time_seconds_sum{job=\"telemetry-demo-app-collector\"}[1m]) / rate(app_response_time_seconds_count{job=\"telemetry-demo-app-collector\"}[1m])",
              "refId": "A",
              "legendFormat": "Avg Response Time"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": { "mode": "thresholds" },
              "thresholds": {
                "steps": [
                  { "color": "green", "value": null },
                  { "color": "yellow", "value": 0.1 },
                  { "color": "red", "value": 0.5 }
                ]
              },
              "unit": "s",
              "decimals": 3
            }
          },
          "gridPos": { "h": 4, "w": 4, "x": 4, "y": 0 }
        },
        {
          "id": 3,
          "title": "üîÑ Services Status",
          "type": "stat",
          "targets": [
            {
              "datasource": "Prometheus",
              "expr": "up",
              "refId": "A",
              "legendFormat": "{{instance}}"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": { "mode": "thresholds" },
              "thresholds": {
                "steps": [
                  { "color": "red", "value": null },
                  { "color": "green", "value": 1 }
                ]
              },
              "mappings": [
                {
                  "options": {
                    "0": { "color": "red", "text": "Down" },
                    "1": { "color": "green", "text": "Up" }
                  },
                  "type": "value"
                }
              ]
            }
          },
          "gridPos": { "h": 4, "w": 4, "x": 8, "y": 0 }
        },
        {
          "id": 4,
          "title": "‚è±Ô∏è Last Request Time",
          "type": "stat",
          "targets": [
            {
              "datasource": "Prometheus",
              "expr": "app_last_request_time{job=\"telemetry-demo-app-collector\"}",
              "refId": "A",
              "legendFormat": "Last Request"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": { "mode": "palette-classic" },
              "unit": "dateTimeAsIso",
              "decimals": 0
            }
          },
          "gridPos": { "h": 4, "w": 12, "x": 12, "y": 0 }
        },
        {
          "id": 8,
          "title": "üìã Application Logs",
          "type": "logs",
          "targets": [
            {
              "refId": "A",
              "datasource": { "type": "loki", "uid": "Loki" },
              "expr": "{service_name=\"telemetry-demo-app\", job=\"telemetry-demo-app\"}"
            }
          ],
          "options": {
            "showLabels": false,
            "showTime": true,
            "wrapLogMessage": true,
            "sortOrder": "Descending",
            "enableLogDetails": true,
            "dedupStrategy": "none"
          },
          "gridPos": { "h": 10, "w": 24, "x": 0, "y": 8 }
        }
      ],
      "time": { "from": "now-1h", "to": "now" },
      "refresh": "10s"
    }
  tracing.json: |
    {
      "title": "Distributed Tracing Overview",
      "tags": ["tracing", "tempo"],
      "timezone": "browser",
      "panels": [
        {
          "id": 1,
          "title": "üîç Recent Traces",
          "type": "table",
          "targets": [
            {
              "datasource": {
                "type": "tempo",
                "uid": "Tempo"
              },
              "query": "{resource.service.name=\"telemetry-demo-app\"}",
              "queryType": "traceql",
              "refId": "A",
              "limit": 100
            }
          ],
          "fieldConfig": {
            "defaults": {
              "custom": {
                "displayMode": "list",
                "inspect": false,
                "filterable": true
              }
            }
          },
          "gridPos": {
            "h": 20,
            "w": 24,
            "x": 0,
            "y": 0
          }
        }
      ],
      "time": {
        "from": "now-1h",
        "to": "now"
      },
      "refresh": "30s"
    }
